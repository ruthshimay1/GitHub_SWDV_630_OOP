4.  An interface is an empty shell; there are only the signatures of the methods, which implies that the methods do not have a body. The interface can't do anything. It's just a pattern. The interface is the main concern for the user since it’s the component that the user interacts with to do a job right.
The implementation is the actual substance behind the idea, the actual definition of how the interface will do what we expect it to. The implementation is not of concern to the user but requires components that are necessary for the user to conduct its goals even though they may not directly interact with the user. 


5. The interface should provide users to select where they would want to place their files that is select their storage device for the files that contain information, and based on the selection of storage device, we call a method that implements it. Moreover, we also define methods that allow users to copy, paste, delete, and move files among different storage devices. Rename their files and folders and restore deleted files and folders. We can implement each storage device and the various possible actions users could do while saving their information as methods of a class say ‘Storage’ class and add necessary conditions for each storage device in the method of the class.
